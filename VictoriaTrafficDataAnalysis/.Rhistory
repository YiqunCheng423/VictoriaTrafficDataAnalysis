layerId = ~LGA_NAME,
Â£ fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
) %>%
addLegend(
pal = pal,
values = ~N,
position = "bottomright"
) # pal = pal, values = ~density, opacity = 0.7, title = NULL,
leaflet(melb_mapdat_copy) %>%
addPolygons(
layerId = ~LGA_NAME,
# fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
) %>%
addLegend(
pal = pal,
values = ~N,
position = "bottomright"
) # pal = pal, values = ~density, opacity = 0.7, title = NULL,
leaflet(melb_mapdat_copy) %>%
addPolygons(
layerId = ~LGA_NAME,
# fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
)
melb_mapdat_copy@data
pal
leaflet(melb_mapdat_copy) %>%
addPolygons(
# layerId =  ~ LGA_NAME,
# fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7
)
leaflet(melb_mapdat_copy) %>%
addPolygons(
layerId =  ~ LGA_NAME,
# fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7
)
leaflet(melb_mapdat_copy) %>%
addPolygons(
layerId =  ~ LGA_NAME,
fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7
)
leaflet(melb_mapdat_copy) %>%
addPolygons(
layerId = ~LGA_NAME,
# fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
)
labels
leaflet(melb_mapdat_copy) %>%
addPolygons(
layerId = ~LGA_NAME,
# fillColor = ~ pal(N),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
# label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
)
styler:::style_active_file()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
remotes::install_github("RinteRface/fullPage")
remotes::install_github("RinteRface/fullPage")
remotes::install_github("RinteRface/fullPage")
remotes::install_github("RinteRface/fullPage")
remotes::install_github("RinteRface/fullPage")
remotes::install_github("RinteRface/fullPage")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?e_legend
e <- cars %>%
e_charts(speed) %>%
e_scatter(dist, symbol_size = 5)
# with legend
e
# without legend
e %>%
e_legend(show = FALSE)
e <- cars %>%
e_charts(speed) %>%
e_scatter(dist, symbol_size = 5)
# with legend
e
# without legend
e %>%
e_legend(type = "scroll")
# prepare data
df <- state.x77 %>%
as.data.frame() %>%
tibble::rownames_to_column("State")
df %>%
e_charts(State) %>% # initialise and set x
e_line(Population, smooth = TRUE) %>%  # add a line
e_area(Income, smooth = TRUE) # add area
df %>%
e_charts(State) %>% # initialise and set x
e_line(Population, smooth = TRUE) %>%  # add a line
e_area(Income, smooth = TRUE) %>% e_legend(type = "scroll")
df %>%
e_charts(State) %>% # initialise and set x
e_line(Population, smooth = TRUE) %>%  # add a line
e_area(Income, smooth = TRUE) %>% e_legend(type = "plain")
runApp()
runApp()
runApp()
library(rgeos)
library(maptools)
library(leaflet)
library(here)
library(data.table)
library(lubridate)
# person
person_raw_data <- fread('PERSON.csv')
person_raw_data <- unique(person_raw_data, by = "ACCIDENT_NO")
person_raw_data
library(leaflet)
library(htmlwidgets)
library(htmltools)
rr <- tags$div(
HTML('<a href="https://cran.r-project.org/"> <img border="0" alt="ImageTitle" src="/PathToImage/ImageR.jpeg" width="300" height="100"> </a>')
)
map_leaflet <- leaflet() %>%
addTiles() %>%
addMarkers(50, 50) %>%
addControl(rr, position = "bottomleft")
saveWidget(map_leaflet, file="testing.html")
library(leaflet)
library(htmlwidgets)
library(htmltools)
rr <- tags$div(
HTML('<a href="https://cran.r-project.org/"> <img border="0" alt="ImageTitle" src="/PathToImage/ImageR.jpeg" width="300" height="100"> </a>')
)
leaflet() %>%
addTiles() %>%
addMarkers(50, 50) %>%
addControl(rr, position = "top")
library(leaflet)
library(htmlwidgets)
library(htmltools)
rr <- tags$div(
HTML('<a href="https://cran.r-project.org/"> <img border="0" alt="ImageTitle" src="/PathToImage/ImageR.jpeg" width="300" height="100"> </a>')
)
leaflet() %>%
addTiles() %>%
addMarkers(50, 50) %>%
addControl(rr, position = "topleft")
library(leaflet)
library(htmlwidgets)
library(htmltools)
rr <- tags$div(
HTML('<a href="https://cran.r-project.org/"> <img border="0" alt="ImageTitle" src="/PathToImage/ImageR.jpeg" width="300" height="100"> </a>')
)
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addTiles() %>%
addMarkers(50, 50) %>%
addControl(rr, position = "topleft")
shiny::runApp()
runApp()
shiny::runApp()
runApp()
tag.map.title <- tags$style(HTML("
.leaflet-control.map-title {
transform: translate(-50%,20%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: rgba(255,255,255,0.75);
font-weight: bold;
font-size: 28px;
}
"))
title <- tags$div(
tag.map.title, HTML("Map title")
)
map_leaflet <- leaflet() %>%
addTiles() %>%
addControl(title, position = "topleft", className="map-title")
map_leaflet
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
p_dat
p_dat[, percent_ := round(N/sum(N) * 100)]
p_dat[, percent_ := round(N/sum(N) * 100, 1)]
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.value[0] + '<br />Number of Accidents: ' + params.value[1])
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.Number of Accidents + '<br />Number of Accidents: ' + params.value[1])
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.seriesName + '<br />Number of Accidents: ' + params.value[1])
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.seriesName + params.name + params.data + params.value+ '<br />Number of Accidents: ' + params.value[1])
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.name + '<br />Number of Accidents: ' + params.value)
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.name + '<br />Number of Accidents: ' + params.value + '(' + params.percent + ')')
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
p_dat %>%
e_charts(`Age Group`) %>%
e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
e_tooltip(formatter = htmlwidgets::JS("
function(params){
return(params.name + '<br />Number of Accidents: ' + params.value + '(' + params.percent + '%)')
}
")) %>%
e_theme("dark-bold") %>%
e_legend(top = "bottom")
runApp()
?pageColumn
runApp()
runApp()
runApp()
runApp()
?pageRow
runApp()
library(openxlsx)
# racv
racv_raw_data <- read.xlsx('RACV Young Adult Licensing Trends 2017.xlsx')
head(racv_raw_data)
View(racv_raw_data)
library(rgeos)
library(maptools)
library(leaflet)
library(here)
library(data.table)
library(lubridate)
library(openxlsx)
## read shp file
melb_mapdat <- readShapeSpatial(here::here("./VIC_LGA_POLYGON_SHP_GDA2020.shp")) # https://data.gov.au/dataset/ds-dga-bdf92691-c6fe-42b9-a0e2-a4cd716fa811/details?q=
# melb_mapdat <- readShapeSpatial(here::here("./Plan-Melbourne-Shape-Files/Administrative/Metro Partnership Boundaries_region.shp")) # https://www.planmelbourne.vic.gov.au/maps/spatial-data
plot(melb_mapdat)
## accident data
location_raw_data <- fread('NODE.csv')
head(location_raw_data)
names(location_raw_data)[names(location_raw_data) == 'Lat'] <- 'LAT'
names(location_raw_data)[names(location_raw_data) == 'Long'] <- 'LONG'
location_raw_data <- location_raw_data[, c('ACCIDENT_NO', 'NODE_ID', 'LGA_NAME', 'DEG_URBAN_NAME', 'LAT', 'LONG', 'POSTCODE_NO')]
location_raw_data[, LGA_NAME := NA]
## accidents
accident_raw_data <- fread('ACCIDENT.csv')
accident_raw_data <- unique(accident_raw_data, by = "ACCIDENT_NO")
# person
person_raw_data <- fread('PERSON.csv')
person_raw_data <- unique(person_raw_data, by = "ACCIDENT_NO")
person_raw_data
?fcase
?fcase
install.packages("data.table")
library(data.table)
?fcase
styler:::style_selection()
racv_raw_data <- read.xlsx('RACV Young Adult Licensing Trends 2017.xlsx')
names(racv_raw_data)[1] <- "AGE_GROUP"
setDT(racv_raw_data)
library(rgeos)
library(maptools)
library(leaflet)
library(here)
library(data.table)
library(lubridate)
library(openxlsx)
racv_raw_data <- read.xlsx('RACV Young Adult Licensing Trends 2017.xlsx')
names(racv_raw_data)[1] <- "AGE_GROUP"
setDT(racv_raw_data)
racv_raw_data
# person
person_raw_data <- fread('PERSON.csv')
person_raw_data <- unique(person_raw_data, by = "ACCIDENT_NO")
person_raw_data[,
AGE_GROUP := fcase(
AGE >= 18 & AGE <= 24, "Age 18-24",
AGE >= 25 & AGE <= 29, "Age 25-29",
AGE >= 30 & AGE <= 34, "Age 30-34",
AGE >= 35 & AGE <= 39, "Age 35-39",
AGE >= 40 & AGE <= 44, "Age 40-44",
AGE >= 45 & AGE <= 49, "Age 45-49",
AGE >= 50 & AGE <= 54, "Age 50-54",
AGE >= 55 & AGE <= 59, "Age 55-59",
AGE >= 60 & AGE <= 64, "Age 60-64",
AGE >= 65 & AGE <= 69, "Age 65-69",
AGE >= 70 & AGE <= 90, "Age 70-90"
)
]
# person
person_raw_data <- fread('PERSON.csv')
person_raw_data
# person
person_raw_data <- fread('PERSON.csv')
person_raw_data <- unique(person_raw_data, by = "ACCIDENT_NO")
person_raw_data[,
AGE_GROUP := fcase(
AGE >= 18 & AGE <= 24, "Age 18-24",
AGE >= 25 & AGE <= 29, "Age 25-29",
AGE >= 30 & AGE <= 34, "Age 30-34",
AGE >= 35 & AGE <= 39, "Age 35-39",
AGE >= 40 & AGE <= 44, "Age 40-44",
AGE >= 45 & AGE <= 49, "Age 45-49",
AGE >= 50 & AGE <= 54, "Age 50-54",
AGE >= 55 & AGE <= 59, "Age 55-59",
AGE >= 60 & AGE <= 64, "Age 60-64",
AGE >= 65 & AGE <= 69, "Age 65-69",
AGE >= 70 & AGE <= 90, "Age 70-90"
)
]
person_raw_data
racv_raw_data <- read_excel('RACV Young Adult Licensing Trends 2017.xlsx')
names(racv_raw_data)[1] <- "AGE_GROUP"
head(racv_raw_data)
racv <- racv_raw_data %>%
gather(key = YEAR, value = PERCENT, -AGE_GROUP)
racv$YEAR <- as.integer(racv$YEAR)
racv <- racv %>%
filter(YEAR %in% 2016)
head(racv)
racv %>%
ggplot(aes(x = AGE_GROUP, y = PERCENT)) +
geom_bar(stat="identity", fill = "#FF6666") +
labs(x = 'Age group', y = 'Driving license holding rate(%)')
library(tidyverse)
library(lubridate)
library(wordcloud2)
library(leaflet)
library(readxl)
library(treemap)
racv_raw_data <- read_excel('RACV Young Adult Licensing Trends 2017.xlsx')
names(racv_raw_data)[1] <- "AGE_GROUP"
head(racv_raw_data)
racv <- racv_raw_data %>%
gather(key = YEAR, value = PERCENT, -AGE_GROUP)
racv$YEAR <- as.integer(racv$YEAR)
racv <- racv %>%
filter(YEAR %in% 2016)
head(racv)
racv %>%
ggplot(aes(x = AGE_GROUP, y = PERCENT)) +
geom_bar(stat="identity", fill = "#FF6666") +
labs(x = 'Age group', y = 'Driving license holding rate(%)')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
?e_x_axis
runApp()
shiny::runApp()
