library(rgeos)
library(maptools)
library(here)
library(data.table)
library(fullPage) # remotes::install_github("RinteRface/fullPage")
library(shiny)
library(echarts4r)
library(leaflet)

### these rds files are generated by data_prepare.R 

age_loc_counts <- readRDS("age_loc_counts.rds")
age_year_counts <- readRDS("age_year_counts.rds")
age_loc2_counts <- readRDS("age_loc2_counts.rds")
year_date_counts <- readRDS("year_date_counts.rds")
inj_loc2_counts <- readRDS("inj_loc2_counts.rds")
melb_mapdat_copy <- readRDS("melb_mapdat_copy.rds")

md1 <- "
    # This is title

    this is long text
    "


md2 <- "
    # &nbsp; About

    ## &nbsp; This is title

    &emsp; The data...

    &emsp; The following

    - crime rate.<br>e.g. what...

    - relationship<br>e.g. what...
    "
md_map <- "
    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
    &emsp; Click the area of map, Nightingale's Rose Diagram will show below
    "
md_by_year <- "
    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
    &emsp; description....
    "
md_by_urban <- "
    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
    &emsp; description....
    "

md3 <- "
    # &nbsp; VicRoad:

    &emsp; https://vicroadsopendatastorehouse.vicroads.vic.gov.au/opendata/Road_Safety/ACCIDENT.zip

    # &nbsp; RACV:

    &emsp; https://www.racv.com.au/content/dam/racv/images/public-policy/reports/RACV%20Young%20Adult%20Licensing%20Trends%202017.pdf
    "


ui <- pagePiling(
  # center = TRUE,
  tags$head(
    tags$style(HTML(".leaflet-container { background: #313131; }"))
  ),
  sections.color = rep("#313131", 10),
  # navigation = TRUE,
  menu = c(
    "Introduction" = "intro",
    "About" = "about",
    "Map" = "map",
    "By-Year" = "by_year",
    "By-Urban" = "by_urban",
    "Reference" = "ref"
  ),
  pageSectionImage(
    # will not show in viewer, open in browser
    menu = "intro",
    center = TRUE,
    img = "https://www.supercars.net/blog/wp-content/uploads/2020/03/img_14-scaled.jpeg",
    div(markdown(md1), style = "color:#f3f3f3;")
  ),
  pageSectionImage(
    menu = "about",
    img = "https://www.supercars.net/blog/wp-content/uploads/2020/03/img_14-scaled.jpeg",
    pageColumn(
      width = 12,
      div(markdown(md2), style = "color:#f3f3f3;")
    )
  ),
  pageSection(
    menu = "map",
    pageColumn(
      width = 3,
      div(markdown(md_map), style = "color:#f3f3f3;")
    ),
    pageColumn(
      width = 9,
      leafletOutput("leaf1", height = 450),
      echarts4rOutput("echarts1")
    )
  ),
  pageSection(
    menu = "by_year",
    pageColumn(
      width = 3,
      div(markdown(md_by_year), style = "color:#f3f3f3;")
    ),
    pageColumn(
      width = 9,
      selectInput(
        "select1",
        shiny::HTML("<p><span style='color: white'>Select Year:</span></p>"),
        choices = sort(unique(age_year_counts$year_), decreasing = TRUE)
      ),
      echarts4rOutput("echarts2", height = "300px"),
      echarts4rOutput("echarts3")
    )
  ),
  pageSection(
    menu = "by_urban",
    pageColumn(
      width = 3,
      div(markdown(md_by_urban), style = "color:#f3f3f3;")
    ),
    pageColumn(
      width = 9,
      selectInput(
        "select2",
        shiny::HTML("<p><span style='color: white'>Select Location:</span></p>"),
        choices = sort(unique(age_loc2_counts$DEG_URBAN_NAME))
      ),
      echarts4rOutput("echarts4", height = "300px"),
      echarts4rOutput("echarts5")
    )
  ),
  pageSection(
    menu = "ref",
    div(markdown(md3), style = "color:#f3f3f3;")
  )
)



server <- function(input, output) {
  
  # Choropleth chart
  output$leaf1 <- renderLeaflet({
    labels <- sprintf(
      "<strong>%s</strong><br/>Accidengts: %s",
      melb_mapdat_copy$LGA_NAME, melb_mapdat_copy$N
    ) %>% lapply(htmltools::HTML)
    pal <- colorBin("YlOrRd", melb_mapdat_copy$N, bins = c(0, 10, 100, 500, 1000, 2000, 5000, 10000, Inf))
    
    # title
    tag.map.title <- tags$style(HTML("
  .leaflet-control.map-title { 
    transform: translate(-50%,20%);
    position: fixed !important;
    left: 50%;
    text-align: center;
    padding-left: 10px; 
    padding-right: 10px; 
    background: #313131;
    color: #f3f3f3;
    font-weight: bold;
    font-size: 28px;
  }"))
    
    title <- tags$div(
      tag.map.title, HTML("Accidents Choropleths in Victoria")
    )  
    
    leaflet(melb_mapdat_copy, 
            options = leafletOptions(zoomControl = FALSE)) %>%
      addPolygons(
        layerId = ~LGA_NAME,
        fillColor = ~ pal(N),
        weight = 2,
        opacity = 1,
        color = "white",
        dashArray = "3",
        fillOpacity = 0.7,
        highlight = highlightOptions(
          weight = 5,
          color = "#666",
          dashArray = "",
          fillOpacity = 0.7,
          bringToFront = TRUE
        ),
        label = labels,
        labelOptions = labelOptions(
          style = list("font-weight" = "normal", padding = "3px 8px"),
          textsize = "15px",
          direction = "auto"
        )
      ) %>%
      addLegend(
        pal = pal,
        values = ~N,
        position = "bottomright"
      ) %>% 
      addControl(title, position = "topleft", className="map-title")
  })
  
  # Nightingale's Rose Diagram
  output$echarts1 <- renderEcharts4r({
    req(input$leaf1_shape_click$id)
    # browser()
    p_dat <- age_loc_counts[LGA_NAME == input$leaf1_shape_click$id][order(-N)]
    p_dat[, percent_ := round(N/sum(N) * 100, 1)]
    p_dat %>%
      e_charts(`Age Group`) %>%
      e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
      e_title(sprintf("Number of Accidents by Age Group in %s", input$leaf1_shape_click$id), left = "center") %>%
      e_tooltip(formatter = htmlwidgets::JS("
      function(params){
        return(params.name + '<br />Number of Accidents: ' + params.value + '(' + params.percent + '%)')
      }
    ")) %>%
      e_theme("dark-bold") %>% 
      e_legend(top = "bottom")
  })
  
  # scatter chart with loess regression
  output$echarts2 <- renderEcharts4r({
    # browser()
    req(input$select1)
    p_dat <- age_year_counts[year_ == input$select1][SEX %in% c("F", "M")][order(-N)]
    setnames(p_dat, old = "N", new = "Number of Accidents")
    p_dat %>%
      group_by(`SEX`) %>%
      e_charts(AGE) %>%
      e_scatter(`Number of Accidents`) %>%
      e_loess(
        `Number of Accidents` ~ `AGE`,
        smooth = TRUE,
        showSymbol = FALSE,
        legend = FALSE
      ) %>%
      e_title("Correlation between Accidents and Age by Gender") %>%
      e_y_axis(min = 0) %>%
      e_tooltip(axisPointer = list(type = "cross")) %>%
      e_theme("dark-bold") %>% 
      e_y_axis(
        name = "Number of Accidents",
        splitLine = list(
          lineStyle = list(
            type = "dashed"
          )
        ),
        axisLine = list(
          show = FALSE
        ),
        axisTick = list(
          show = FALSE
        )
      ) %>%
      e_x_axis(
        name = "Age",
        min = 16,
        max = 90,
        splitLine = list(
          show = FALSE
        ),
        axisLine = list(
          show = FALSE
        ),
        axisTick = list(
          show = FALSE
        )
      ) %>% 
      e_legend(top = "bottom")
  })
  
  # calendar heat map
  output$echarts3 <- renderEcharts4r({
    req(input$select1)
    # browser()
    p_dat <- year_date_counts[year_ == input$select1]
    n_limits <-
      as.integer(quantile(p_dat$N, probs = c(0.1, 0.9), na.rm = TRUE))

    p_dat %>%
      e_charts(ACCIDENTDATE) %>%
      e_calendar(range = input$select1, 
                 monthLabel = list(color = "white"),
                 dayLabel = list(color = "white")) %>%
      e_heatmap(N, coord_system = "calendar", name = "Number of Accidents") %>%
      e_visual_map(min = n_limits[1], max = n_limits[2]) %>%
      e_title("Accidents Heatmap by Date") %>%
      e_tooltip("item") %>%
      e_theme("dark-bold")
  })
  
  # scatter chart with loess regression
  output$echarts4 <- renderEcharts4r({
    # browser()
    req(input$select2)
    p_dat <-
      age_loc2_counts[DEG_URBAN_NAME == input$select2][order(-N)]
    setnames(p_dat, old = "N", new = "Number of Accidents")
    p_dat %>%
      e_charts(`AGE`) %>%
      e_scatter(`Number of Accidents`) %>%
      e_loess(
        `Number of Accidents` ~ `AGE`,
        smooth = TRUE,
        showSymbol = FALSE,
        legend = FALSE
      ) %>%
      e_title("Correlation between Accidents and Age") %>%
      e_y_axis(min = 0) %>%
      e_tooltip(axisPointer = list(type = "cross")) %>%
      e_theme("dark-bold") %>% 
      e_y_axis(
        name = "Number of Accidents",
        splitLine = list(
          lineStyle = list(
            type = "dashed"
          )
        ),
        axisLine = list(
          show = FALSE
        ),
        axisTick = list(
          show = FALSE
        )
      ) %>%
      e_x_axis(
        name = "Age",
        min = 16,
        max = 90,
        splitLine = list(
          show = FALSE
        ),
        axisLine = list(
          show = FALSE
        ),
        axisTick = list(
          show = FALSE
        )
      ) %>% 
      e_legend(top = "bottom")
  })
  
  # Nightingale's Rose Diagram
  output$echarts5 <- renderEcharts4r({
    # browser()
    req(input$select2)
    p_dat <- inj_loc2_counts[DEG_URBAN_NAME == input$select2][order(-N)]
    p_dat[, percent_ := round(N/sum(N) * 100, 1)]
    p_dat %>%
      e_charts(`Inj Level Desc`) %>%
      e_pie(N, roseType = "radius", name = "Number of Accidents") %>%
      e_title(sprintf("Number of Accidents by Inj Level among %s", input$select2), left = "center") %>%
      e_tooltip(formatter = htmlwidgets::JS("
      function(params){
        return(params.name + '<br />Number of Accidents: ' + params.value + '(' + params.percent + '%)')
      }
    ")) %>%
      e_theme("dark-bold") %>% 
      e_legend(top = "bottom")
  })
}

shinyApp(ui, server)
